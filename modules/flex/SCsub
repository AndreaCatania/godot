#!/usr/bin/env python

import os
import glob

Import('env')
Import('env_modules')

nvcc_path = ARGUMENTS.get("nvcc_path", "")
cuda_lib = ARGUMENTS.get("cuda_lib", "")


# Compile cuda files
nvcc_flags = "-O3"

if env['target']=="debug":
    nvcc_flags += " -g "

if nvcc_path != "":
    nvcc_path += "/"

nvcc = Builder(
    action = nvcc_path + "nvcc " + nvcc_flags + " -I. --compile $SOURCE -o $TARGET",
    suffix = ".o",
    src_suffix = ".cu"
)

env.Append(BUILDERS = {'nvcc' : nvcc})

cuda_kernels = glob.glob("./godot_flex_ext/*.cu")
for f in cuda_kernels:
    env.nvcc(f)

env.modules_sources.append( ["./flex/" + f.replace('.cu', '.o') for f in cuda_kernels])

env.Prepend(LIBPATH=["#/modules/flex/godot_flex_ext"])

env_flex = env_modules.Clone()

flex_base = "#thirdparty/flex"
flex_lib = flex_base + "/lib"
flex_include = flex_base + "/include"
flex_core = flex_base + "/core"

# TODO change according to realease and debug version of godot
FLEX_LIBS = ["NvFlexDebugCUDA_x64", "NvFlexDeviceDebug_x64", "NvFlexExtDebugCUDA_x64"]

env.Append(LIBS=["cudart"])

# TODO make platform agnostic
env.Append(LIBPATH=[flex_lib + "/linux64", cuda_lib])
env.Append(LIBS=[file_name for file_name in FLEX_LIBS])

if cuda_lib != "":
    env.Prepend(LIBPATH=[cuda_lib])

env_flex.Append(CPPPATH=[flex_include, flex_core])
env_flex.add_source_files(env.modules_sources, "*.cpp")

